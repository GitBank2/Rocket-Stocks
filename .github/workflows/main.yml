# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load
​
import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
​
# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory
​
import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))
        
import numpy as np
import tensorflow.compat.v2 as tf
import tensorflow_hub as hub

# inputs_frames must be in [0, 1] and of the shape Batch x T x H x W x 3
B, T, H, W = 1, 32, 200, 200
input_frames = np.zeros([B, T, H, W, 3], np.float32)
# inputs_audio must be in [-1, 1] and of the shape Batch x T'
T = 153600
input_audio = np.zeros([B, T], np.float32)
# inputs_words are just a list of sentences (i.e. ['the sky is blue', 'someone cutting an apple'])
input_words = np.array(['the sky is blue', 'someone cutting an apple'])

module = hub.load("https://www.kaggle.com/models/deepmind/mmv/TensorFlow1/s3d/1")

module = hub.load("https://www.kaggle.com/models/deepmind/mmv/TensorFlow1/s3d/1", tags={"train"})
​
vision_output = module.signatures['video'](tf.constant(tf.cast(input_frames, dtype=tf.float32)))
audio_output = module.signatures['audio'](tf.constant(tf.cast(input_audio, dtype=tf.float32)))
text_output = module.signatures['text'](tf.constant(input_words))

    pip install yfinance tweepy numpy pandas scikit-learn tensorflow transformers kafka-python




​

        
